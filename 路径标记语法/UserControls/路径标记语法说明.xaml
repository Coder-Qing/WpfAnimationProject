<UserControl x:Class="路径标记语法.UserControls.路径标记语法说明"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:路径标记语法.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800"
             Width="1000">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel>
            <!--使用路径标记语法绘图时一般分三步：移动至起点一绘图→闭合图形，这三步使用的命令稍有差别：

移动到起点使用的是“移动命令”M；
绘图使用的是绘图命令，包括L、H、V、A、C、Q等；
如果图形是闭合的，需要使用“闭合命令”Z，这样最后一条线段的终点与第一条线段的起点间会连接上一条直线段。-->
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="使用路径标记语法绘图时一般分三步：移动至起点一绘图→闭合图形" FontWeight="Bold"/>
                <TextBlock Text="，这三步使用的命令稍有差别："/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="   移动到起点使用的是"/>
                <TextBlock Text="&quot;移动命令&quot;M；" FontWeight="Bold"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="   绘图使用的是"/>
                <TextBlock Text="绘图命令，包括L、H、V、A、C、Q等；" FontWeight="Bold"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="   如果图形是闭合的，需要使用"/>
                <TextBlock Text="&quot;闭合命令&quot;Z；" FontWeight="Bold"/>
                <TextBlock Text="这样最后一条线段的终点与第一条线段的起点间会连接上一条直线段。"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0 10 0 0">
                <TextBlock Text="路径标记语法不区分大小写 " FontWeight="Bold"/>
                <TextBlock Text="（A与a、H与h等价）"/>
                <TextBlock Text="建议使用逗号作为点横纵坐标的分隔符" FontWeight="Bold"/>
            </StackPanel>
        </StackPanel>
        <Grid Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image Source="{StaticResource IMG_Image1}"/>
            <Image Source="{StaticResource IMG_Image2}" Grid.Column="1"/>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel>
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="S用于绘制平滑三次方贝塞尔曲线" FontWeight="Bold"/>
                    <TextBlock Grid.Column="1" Text="只需要给出一个控制点（相当于普通三次方贝塞尔曲线的第二个控制点），平滑三次方贝塞尔曲线会把前一条三次方贝塞尔曲线的第二控制点以起点为对称中心的对称点当作自己的第一控制点（如果前面的线段不是三次方贝塞尔曲线，则第一控制点与起点相同）。"
                               TextWrapping="Wrap" FontSize="10"/>
                </Grid>
                <Path Stroke="Red" Data="M 0,0 C30,0 70,100 100,100 S 170,0 200,0"/>
                <Path Stroke="Black" Data="M 0,0 C30,0 70,100 100,100 C 130,100 170,0 200,0"/>
            </StackPanel>
            <StackPanel Grid.Column="1">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="T命令用于绘制平滑二次方贝塞尔曲线" FontWeight="Bold"/>
                    <TextBlock Grid.Column="1" Text="绘制的时候如果前面的线段也是一段二次方贝塞尔曲线的话，T命令会把前面这段曲线的控制点以起点为对称中心的对称点当作自己的控制点（如果前面的线段不是二次方贝塞尔曲线则控制点与起点相同）。"
                               TextWrapping="Wrap" FontSize="10"/>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Path Stroke="Red" Data="M 0,100 Q 50,0 100,100 T 200,100"/>
                    <Path Grid.Column="1" Stroke="Black" Data="M 0,100 Q 50,0 100,100 Q 150,200 200,100"/>
                </Grid>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
